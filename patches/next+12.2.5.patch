diff --git a/node_modules/next/dist/client/index.js b/node_modules/next/dist/client/index.js
index 6fd8568..0439038 100644
--- a/node_modules/next/dist/client/index.js
+++ b/node_modules/next/dist/client/index.js
@@ -407,8 +407,16 @@ function renderReactElement(domEl, fn) {
     const reactEl = fn(shouldHydrate ? markHydrateComplete : markRenderComplete);
     if (process.env.__NEXT_REACT_ROOT) {
         if (!reactRoot) {
-            // Unlike with createRoot, you don't need a separate root.render() call here
-            reactRoot = ReactDOM.hydrateRoot(domEl, reactEl);
+            const startTransition = _react.default.startTransition;
+
+            const defer = window.requestIdleCallback || window.setTimeout
+            defer(() => {
+                startTransition(()=>{ 
+                    // Unlike with createRoot, you don't need a separate root.render() call here
+                    reactRoot = ReactDOM.hydrateRoot(domEl, reactEl);
+                });
+            })
+
             // TODO: Remove shouldHydrate variable when React 18 is stable as it can depend on `reactRoot` existing
             shouldHydrate = false;
         } else {
diff --git a/node_modules/next/dist/server/dev/next-dev-server.js b/node_modules/next/dist/server/dev/next-dev-server.js
index 77c91a9..e055ddd 100644
--- a/node_modules/next/dist/server/dev/next-dev-server.js
+++ b/node_modules/next/dist/server/dev/next-dev-server.js
@@ -785,6 +785,8 @@ class DevServer extends _nextServer.default {
         const __getStaticPaths = async ()=>{
             const { configFileName , publicRuntimeConfig , serverRuntimeConfig , httpAgentOptions ,  } = this.nextConfig;
             const { locales , defaultLocale  } = this.nextConfig.i18n || {};
+
+            return { paths: [], fallback: 'blocking'}
             const paths = await this.getStaticPathsWorker().loadStaticPaths(this.distDir, pathname, !this.renderOpts.dev && this._isLikeServerless, {
                 configFileName,
                 publicRuntimeConfig,
